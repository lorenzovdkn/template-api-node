openapi: 3.0.0
info:
  title: ONE PIECE TGC API
  version: 1.0.0
  description: API pour gérer les utilisateurs dans le jeu de cartes ONE PIECE.

servers:
  - url: http://localhost:3000
    description: Serveur local

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          example: "john.doe@example.com"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Error message"

tags:
  - name: Utilisateurs
    description: Gestion des utilisateurs (inscription, connexion, mise à jour, suppression)

paths:
  /users:
    post:
      summary: Crée un nouvel utilisateur
      tags: [Utilisateurs]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        "201":
          description: Utilisateur créé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Informations manquantes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Email déjà existant
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/login:
    post:
      summary: Connexion utilisateur
      tags: [Utilisateurs]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: Connexion réussie avec un token JWT
          content:
            application/json:
              example:
                token: "mockedToken"
        "400":
          description: Identifiants invalides
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{id}:
    patch:
      summary: Met à jour un utilisateur
      tags: [Utilisateurs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "updated.email@example.com"
                password:
                  type: string
                  example: "newPassword123"
      responses:
        "200":
          description: Utilisateur mis à jour
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Mauvaise requête
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: Supprime un utilisateur
      tags: [Utilisateurs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Utilisateur supprimé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
